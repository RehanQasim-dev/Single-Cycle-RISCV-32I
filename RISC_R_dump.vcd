$date
	Thu Mar 30 00:41:04 2023
$end
$version
	ModelSim Version 10.6d
$end
$timescale
	1ns
$end

$scope module RISC_V_tb $end
$var parameter 32 ! CLK_PERIOD $end
$var reg 1 " rst $end
$var reg 1 # clk $end

$scope module RISC_R_instance $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var reg 32 & instruction [31:0] $end
$var reg 32 ' wdata_mem [31:0] $end
$var reg 32 ( rdata2 [31:0] $end
$var reg 1 ) reg_wr $end
$var reg 1 * A_sel $end
$var reg 1 + PC_sel $end
$var reg 1 , B_sel $end
$var reg 1 - br_taken $end
$var reg 1 . mem_wr $end
$var reg 3 / load_ctrl [2:0] $end
$var reg 2 0 wb_sel [1:0] $end
$var reg 2 1 mem_col [1:0] $end
$var reg 4 2 ALUctrl [3:0] $end
$var reg 4 3 mask [3:0] $end

$scope module Controller_instance $end
$var parameter 5 4 R_type $end
$var parameter 5 5 I_type $end
$var parameter 5 6 Load_type $end
$var parameter 5 7 S_type $end
$var parameter 5 8 B_type $end
$var parameter 5 9 J_type $end
$var parameter 5 : Jalr_type $end
$var parameter 5 ; lui_type $end
$var parameter 5 < auipc_type $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 = instruction [31] $end
$var wire 1 > instruction [30] $end
$var wire 1 ? instruction [29] $end
$var wire 1 @ instruction [28] $end
$var wire 1 A instruction [27] $end
$var wire 1 B instruction [26] $end
$var wire 1 C instruction [25] $end
$var wire 1 D instruction [24] $end
$var wire 1 E instruction [23] $end
$var wire 1 F instruction [22] $end
$var wire 1 G instruction [21] $end
$var wire 1 H instruction [20] $end
$var wire 1 I instruction [19] $end
$var wire 1 J instruction [18] $end
$var wire 1 K instruction [17] $end
$var wire 1 L instruction [16] $end
$var wire 1 M instruction [15] $end
$var wire 1 N instruction [14] $end
$var wire 1 O instruction [13] $end
$var wire 1 P instruction [12] $end
$var wire 1 Q instruction [11] $end
$var wire 1 R instruction [10] $end
$var wire 1 S instruction [9] $end
$var wire 1 T instruction [8] $end
$var wire 1 U instruction [7] $end
$var wire 1 V instruction [6] $end
$var wire 1 W instruction [5] $end
$var wire 1 X instruction [4] $end
$var wire 1 Y instruction [3] $end
$var wire 1 Z instruction [2] $end
$var wire 1 [ instruction [1] $end
$var wire 1 \ instruction [0] $end
$var wire 1 ] mem_col [1] $end
$var wire 1 ^ mem_col [0] $end
$var wire 1 _ b_taken $end
$var reg 32 ` wdata_mem [31:0] $end
$var reg 4 a ALUctrl [3:0] $end
$var reg 3 b load_ctrl [2:0] $end
$var reg 4 c mask [3:0] $end
$var reg 1 d mem_wr $end
$var reg 1 e A_sel $end
$var reg 1 f B_sel $end
$var reg 1 g reg_wr $end
$var reg 1 h PC_sel $end
$var reg 2 i wb_sel [1:0] $end
$var wire 1 j rdata2 [31] $end
$var wire 1 k rdata2 [30] $end
$var wire 1 l rdata2 [29] $end
$var wire 1 m rdata2 [28] $end
$var wire 1 n rdata2 [27] $end
$var wire 1 o rdata2 [26] $end
$var wire 1 p rdata2 [25] $end
$var wire 1 q rdata2 [24] $end
$var wire 1 r rdata2 [23] $end
$var wire 1 s rdata2 [22] $end
$var wire 1 t rdata2 [21] $end
$var wire 1 u rdata2 [20] $end
$var wire 1 v rdata2 [19] $end
$var wire 1 w rdata2 [18] $end
$var wire 1 x rdata2 [17] $end
$var wire 1 y rdata2 [16] $end
$var wire 1 z rdata2 [15] $end
$var wire 1 { rdata2 [14] $end
$var wire 1 | rdata2 [13] $end
$var wire 1 } rdata2 [12] $end
$var wire 1 ~ rdata2 [11] $end
$var wire 1 !! rdata2 [10] $end
$var wire 1 "! rdata2 [9] $end
$var wire 1 #! rdata2 [8] $end
$var wire 1 $! rdata2 [7] $end
$var wire 1 %! rdata2 [6] $end
$var wire 1 &! rdata2 [5] $end
$var wire 1 '! rdata2 [4] $end
$var wire 1 (! rdata2 [3] $end
$var wire 1 )! rdata2 [2] $end
$var wire 1 *! rdata2 [1] $end
$var wire 1 +! rdata2 [0] $end
$var reg 7 ,! opcode [6:0] $end
$var reg 1 -! func7 $end
$var reg 3 .! func3 [2:0] $end

$scope module LS_controller_instance $end
$var parameter 3 /! b $end
$var parameter 3 0! h $end
$var parameter 3 1! w $end
$var parameter 3 2! bu $end
$var parameter 3 3! hu $end
$var wire 1 4! func3 [2] $end
$var wire 1 5! func3 [1] $end
$var wire 1 6! func3 [0] $end
$var wire 1 ] address [1] $end
$var wire 1 ^ address [0] $end
$var wire 1 j rdata2 [31] $end
$var wire 1 k rdata2 [30] $end
$var wire 1 l rdata2 [29] $end
$var wire 1 m rdata2 [28] $end
$var wire 1 n rdata2 [27] $end
$var wire 1 o rdata2 [26] $end
$var wire 1 p rdata2 [25] $end
$var wire 1 q rdata2 [24] $end
$var wire 1 r rdata2 [23] $end
$var wire 1 s rdata2 [22] $end
$var wire 1 t rdata2 [21] $end
$var wire 1 u rdata2 [20] $end
$var wire 1 v rdata2 [19] $end
$var wire 1 w rdata2 [18] $end
$var wire 1 x rdata2 [17] $end
$var wire 1 y rdata2 [16] $end
$var wire 1 z rdata2 [15] $end
$var wire 1 { rdata2 [14] $end
$var wire 1 | rdata2 [13] $end
$var wire 1 } rdata2 [12] $end
$var wire 1 ~ rdata2 [11] $end
$var wire 1 !! rdata2 [10] $end
$var wire 1 "! rdata2 [9] $end
$var wire 1 #! rdata2 [8] $end
$var wire 1 $! rdata2 [7] $end
$var wire 1 %! rdata2 [6] $end
$var wire 1 &! rdata2 [5] $end
$var wire 1 '! rdata2 [4] $end
$var wire 1 (! rdata2 [3] $end
$var wire 1 )! rdata2 [2] $end
$var wire 1 *! rdata2 [1] $end
$var wire 1 +! rdata2 [0] $end
$var reg 32 7! wdata_mem [31:0] $end
$var reg 3 8! load_ctrl [2:0] $end
$var reg 4 9! mask [3:0] $end
$upscope $end
$upscope $end

$scope module data_path_instance $end
$var parameter 5 :! I_type $end
$var parameter 5 ;! Load_type $end
$var parameter 5 <! B_type $end
$var parameter 5 =! S_type $end
$var parameter 5 >! J_type $end
$var parameter 5 ?! Jalr_type $end
$var parameter 5 @! lui_type $end
$var parameter 5 A! auipc_type $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 B! reg_wr $end
$var wire 1 C! A_sel $end
$var wire 1 D! B_sel $end
$var wire 1 E! mem_wr $end
$var wire 1 F! PC_sel $end
$var wire 1 G! wb_sel [1] $end
$var wire 1 H! wb_sel [0] $end
$var wire 1 I! mask [3] $end
$var wire 1 J! mask [2] $end
$var wire 1 K! mask [1] $end
$var wire 1 L! mask [0] $end
$var wire 1 M! load_ctrl [2] $end
$var wire 1 N! load_ctrl [1] $end
$var wire 1 O! load_ctrl [0] $end
$var wire 1 P! ALUctrl [3] $end
$var wire 1 Q! ALUctrl [2] $end
$var wire 1 R! ALUctrl [1] $end
$var wire 1 S! ALUctrl [0] $end
$var wire 1 T! wdata_mem [31] $end
$var wire 1 U! wdata_mem [30] $end
$var wire 1 V! wdata_mem [29] $end
$var wire 1 W! wdata_mem [28] $end
$var wire 1 X! wdata_mem [27] $end
$var wire 1 Y! wdata_mem [26] $end
$var wire 1 Z! wdata_mem [25] $end
$var wire 1 [! wdata_mem [24] $end
$var wire 1 \! wdata_mem [23] $end
$var wire 1 ]! wdata_mem [22] $end
$var wire 1 ^! wdata_mem [21] $end
$var wire 1 _! wdata_mem [20] $end
$var wire 1 `! wdata_mem [19] $end
$var wire 1 a! wdata_mem [18] $end
$var wire 1 b! wdata_mem [17] $end
$var wire 1 c! wdata_mem [16] $end
$var wire 1 d! wdata_mem [15] $end
$var wire 1 e! wdata_mem [14] $end
$var wire 1 f! wdata_mem [13] $end
$var wire 1 g! wdata_mem [12] $end
$var wire 1 h! wdata_mem [11] $end
$var wire 1 i! wdata_mem [10] $end
$var wire 1 j! wdata_mem [9] $end
$var wire 1 k! wdata_mem [8] $end
$var wire 1 l! wdata_mem [7] $end
$var wire 1 m! wdata_mem [6] $end
$var wire 1 n! wdata_mem [5] $end
$var wire 1 o! wdata_mem [4] $end
$var wire 1 p! wdata_mem [3] $end
$var wire 1 q! wdata_mem [2] $end
$var wire 1 r! wdata_mem [1] $end
$var wire 1 s! wdata_mem [0] $end
$var reg 32 t! instruction [31:0] $end
$var reg 2 u! mem_col [1:0] $end
$var reg 1 v! b_taken $end
$var reg 32 w! rdata2 [31:0] $end
$var reg 32 x! instruction_addr [31:0] $end
$var reg 32 y! wdata [31:0] $end
$var reg 32 z! ALUresult [31:0] $end
$var reg 32 {! ReadData [31:0] $end
$var reg 32 |! rdata1 [31:0] $end
$var reg 32 }! PC [31:0] $end
$var reg 32 ~! PC_mux_o [31:0] $end
$var reg 5 !" raddr1 [4:0] $end
$var reg 5 "" raddr2 [4:0] $end
$var reg 5 #" waddr [4:0] $end
$var reg 32 $" rd2 [31:0] $end
$var reg 1 %" RegWrite $end
$var reg 3 &" func3 [2:0] $end
$var reg 32 '" ALU_o [31:0] $end
$var reg 32 (" mem_data [31:0] $end
$var reg 32 )" imm [31:0] $end
$var reg 32 *" ALU_op_b [31:0] $end
$var reg 32 +" ALU_op_a [31:0] $end

$scope module Regfile_instance $end
$var wire 1 ," rst $end
$var wire 1 $ clk $end
$var wire 1 B! write_en $end
$var wire 1 -" rs1_in [4] $end
$var wire 1 ." rs1_in [3] $end
$var wire 1 /" rs1_in [2] $end
$var wire 1 0" rs1_in [1] $end
$var wire 1 1" rs1_in [0] $end
$var wire 1 2" rs2_in [4] $end
$var wire 1 3" rs2_in [3] $end
$var wire 1 4" rs2_in [2] $end
$var wire 1 5" rs2_in [1] $end
$var wire 1 6" rs2_in [0] $end
$var wire 1 7" rd [4] $end
$var wire 1 8" rd [3] $end
$var wire 1 9" rd [2] $end
$var wire 1 :" rd [1] $end
$var wire 1 ;" rd [0] $end
$var wire 1 <" write_data [31] $end
$var wire 1 =" write_data [30] $end
$var wire 1 >" write_data [29] $end
$var wire 1 ?" write_data [28] $end
$var wire 1 @" write_data [27] $end
$var wire 1 A" write_data [26] $end
$var wire 1 B" write_data [25] $end
$var wire 1 C" write_data [24] $end
$var wire 1 D" write_data [23] $end
$var wire 1 E" write_data [22] $end
$var wire 1 F" write_data [21] $end
$var wire 1 G" write_data [20] $end
$var wire 1 H" write_data [19] $end
$var wire 1 I" write_data [18] $end
$var wire 1 J" write_data [17] $end
$var wire 1 K" write_data [16] $end
$var wire 1 L" write_data [15] $end
$var wire 1 M" write_data [14] $end
$var wire 1 N" write_data [13] $end
$var wire 1 O" write_data [12] $end
$var wire 1 P" write_data [11] $end
$var wire 1 Q" write_data [10] $end
$var wire 1 R" write_data [9] $end
$var wire 1 S" write_data [8] $end
$var wire 1 T" write_data [7] $end
$var wire 1 U" write_data [6] $end
$var wire 1 V" write_data [5] $end
$var wire 1 W" write_data [4] $end
$var wire 1 X" write_data [3] $end
$var wire 1 Y" write_data [2] $end
$var wire 1 Z" write_data [1] $end
$var wire 1 [" write_data [0] $end
$var reg 32 \" rs1_out [31:0] $end
$var reg 32 ]" rs2_out [31:0] $end
$var reg 32 ^" result [31:0] $end
$var reg 1 _" valid_add1 $end
$var reg 1 `" valid_add2 $end
$var reg 1 a" valid_write_en $end
$upscope $end

$scope module ALU_instance $end
$var wire 1 b" a_in [31] $end
$var wire 1 c" a_in [30] $end
$var wire 1 d" a_in [29] $end
$var wire 1 e" a_in [28] $end
$var wire 1 f" a_in [27] $end
$var wire 1 g" a_in [26] $end
$var wire 1 h" a_in [25] $end
$var wire 1 i" a_in [24] $end
$var wire 1 j" a_in [23] $end
$var wire 1 k" a_in [22] $end
$var wire 1 l" a_in [21] $end
$var wire 1 m" a_in [20] $end
$var wire 1 n" a_in [19] $end
$var wire 1 o" a_in [18] $end
$var wire 1 p" a_in [17] $end
$var wire 1 q" a_in [16] $end
$var wire 1 r" a_in [15] $end
$var wire 1 s" a_in [14] $end
$var wire 1 t" a_in [13] $end
$var wire 1 u" a_in [12] $end
$var wire 1 v" a_in [11] $end
$var wire 1 w" a_in [10] $end
$var wire 1 x" a_in [9] $end
$var wire 1 y" a_in [8] $end
$var wire 1 z" a_in [7] $end
$var wire 1 {" a_in [6] $end
$var wire 1 |" a_in [5] $end
$var wire 1 }" a_in [4] $end
$var wire 1 ~" a_in [3] $end
$var wire 1 !# a_in [2] $end
$var wire 1 "# a_in [1] $end
$var wire 1 ## a_in [0] $end
$var wire 1 $# b_in [31] $end
$var wire 1 %# b_in [30] $end
$var wire 1 &# b_in [29] $end
$var wire 1 '# b_in [28] $end
$var wire 1 (# b_in [27] $end
$var wire 1 )# b_in [26] $end
$var wire 1 *# b_in [25] $end
$var wire 1 +# b_in [24] $end
$var wire 1 ,# b_in [23] $end
$var wire 1 -# b_in [22] $end
$var wire 1 .# b_in [21] $end
$var wire 1 /# b_in [20] $end
$var wire 1 0# b_in [19] $end
$var wire 1 1# b_in [18] $end
$var wire 1 2# b_in [17] $end
$var wire 1 3# b_in [16] $end
$var wire 1 4# b_in [15] $end
$var wire 1 5# b_in [14] $end
$var wire 1 6# b_in [13] $end
$var wire 1 7# b_in [12] $end
$var wire 1 8# b_in [11] $end
$var wire 1 9# b_in [10] $end
$var wire 1 :# b_in [9] $end
$var wire 1 ;# b_in [8] $end
$var wire 1 <# b_in [7] $end
$var wire 1 =# b_in [6] $end
$var wire 1 ># b_in [5] $end
$var wire 1 ?# b_in [4] $end
$var wire 1 @# b_in [3] $end
$var wire 1 A# b_in [2] $end
$var wire 1 B# b_in [1] $end
$var wire 1 C# b_in [0] $end
$var wire 1 P! ALUctrl [3] $end
$var wire 1 Q! ALUctrl [2] $end
$var wire 1 R! ALUctrl [1] $end
$var wire 1 S! ALUctrl [0] $end
$var reg 32 D# result_o [31:0] $end
$var reg 32 E# and_res [31:0] $end
$var reg 32 F# or_res [31:0] $end
$var reg 32 G# xor_res [31:0] $end
$var reg 32 H# add_sub_res [31:0] $end
$var reg 32 I# SLT_res [31:0] $end
$var reg 32 J# SLTU_res [31:0] $end
$var reg 32 K# t [31:0] $end
$var reg 32 L# SLL_res [31:0] $end
$var reg 32 M# SRL_res [31:0] $end
$var reg 32 N# SRA_res [31:0] $end
$var reg 32 O# mux1_o [31:0] $end
$var reg 1 P# C_out $end
$var reg 1 Q# N $end
$var reg 1 R# V $end
$var reg 1 S# W $end
$var reg 1 T# C $end

$scope module ALU_mux $end
$var wire 1 U# i1 [31] $end
$var wire 1 V# i1 [30] $end
$var wire 1 W# i1 [29] $end
$var wire 1 X# i1 [28] $end
$var wire 1 Y# i1 [27] $end
$var wire 1 Z# i1 [26] $end
$var wire 1 [# i1 [25] $end
$var wire 1 \# i1 [24] $end
$var wire 1 ]# i1 [23] $end
$var wire 1 ^# i1 [22] $end
$var wire 1 _# i1 [21] $end
$var wire 1 `# i1 [20] $end
$var wire 1 a# i1 [19] $end
$var wire 1 b# i1 [18] $end
$var wire 1 c# i1 [17] $end
$var wire 1 d# i1 [16] $end
$var wire 1 e# i1 [15] $end
$var wire 1 f# i1 [14] $end
$var wire 1 g# i1 [13] $end
$var wire 1 h# i1 [12] $end
$var wire 1 i# i1 [11] $end
$var wire 1 j# i1 [10] $end
$var wire 1 k# i1 [9] $end
$var wire 1 l# i1 [8] $end
$var wire 1 m# i1 [7] $end
$var wire 1 n# i1 [6] $end
$var wire 1 o# i1 [5] $end
$var wire 1 p# i1 [4] $end
$var wire 1 q# i1 [3] $end
$var wire 1 r# i1 [2] $end
$var wire 1 s# i1 [1] $end
$var wire 1 t# i1 [0] $end
$var wire 1 u# i2 [31] $end
$var wire 1 v# i2 [30] $end
$var wire 1 w# i2 [29] $end
$var wire 1 x# i2 [28] $end
$var wire 1 y# i2 [27] $end
$var wire 1 z# i2 [26] $end
$var wire 1 {# i2 [25] $end
$var wire 1 |# i2 [24] $end
$var wire 1 }# i2 [23] $end
$var wire 1 ~# i2 [22] $end
$var wire 1 !$ i2 [21] $end
$var wire 1 "$ i2 [20] $end
$var wire 1 #$ i2 [19] $end
$var wire 1 $$ i2 [18] $end
$var wire 1 %$ i2 [17] $end
$var wire 1 &$ i2 [16] $end
$var wire 1 '$ i2 [15] $end
$var wire 1 ($ i2 [14] $end
$var wire 1 )$ i2 [13] $end
$var wire 1 *$ i2 [12] $end
$var wire 1 +$ i2 [11] $end
$var wire 1 ,$ i2 [10] $end
$var wire 1 -$ i2 [9] $end
$var wire 1 .$ i2 [8] $end
$var wire 1 /$ i2 [7] $end
$var wire 1 0$ i2 [6] $end
$var wire 1 1$ i2 [5] $end
$var wire 1 2$ i2 [4] $end
$var wire 1 3$ i2 [3] $end
$var wire 1 4$ i2 [2] $end
$var wire 1 5$ i2 [1] $end
$var wire 1 6$ i2 [0] $end
$var wire 1 7$ i3 [31] $end
$var wire 1 8$ i3 [30] $end
$var wire 1 9$ i3 [29] $end
$var wire 1 :$ i3 [28] $end
$var wire 1 ;$ i3 [27] $end
$var wire 1 <$ i3 [26] $end
$var wire 1 =$ i3 [25] $end
$var wire 1 >$ i3 [24] $end
$var wire 1 ?$ i3 [23] $end
$var wire 1 @$ i3 [22] $end
$var wire 1 A$ i3 [21] $end
$var wire 1 B$ i3 [20] $end
$var wire 1 C$ i3 [19] $end
$var wire 1 D$ i3 [18] $end
$var wire 1 E$ i3 [17] $end
$var wire 1 F$ i3 [16] $end
$var wire 1 G$ i3 [15] $end
$var wire 1 H$ i3 [14] $end
$var wire 1 I$ i3 [13] $end
$var wire 1 J$ i3 [12] $end
$var wire 1 K$ i3 [11] $end
$var wire 1 L$ i3 [10] $end
$var wire 1 M$ i3 [9] $end
$var wire 1 N$ i3 [8] $end
$var wire 1 O$ i3 [7] $end
$var wire 1 P$ i3 [6] $end
$var wire 1 Q$ i3 [5] $end
$var wire 1 R$ i3 [4] $end
$var wire 1 S$ i3 [3] $end
$var wire 1 T$ i3 [2] $end
$var wire 1 U$ i3 [1] $end
$var wire 1 V$ i3 [0] $end
$var wire 1 W$ i4 [31] $end
$var wire 1 X$ i4 [30] $end
$var wire 1 Y$ i4 [29] $end
$var wire 1 Z$ i4 [28] $end
$var wire 1 [$ i4 [27] $end
$var wire 1 \$ i4 [26] $end
$var wire 1 ]$ i4 [25] $end
$var wire 1 ^$ i4 [24] $end
$var wire 1 _$ i4 [23] $end
$var wire 1 `$ i4 [22] $end
$var wire 1 a$ i4 [21] $end
$var wire 1 b$ i4 [20] $end
$var wire 1 c$ i4 [19] $end
$var wire 1 d$ i4 [18] $end
$var wire 1 e$ i4 [17] $end
$var wire 1 f$ i4 [16] $end
$var wire 1 g$ i4 [15] $end
$var wire 1 h$ i4 [14] $end
$var wire 1 i$ i4 [13] $end
$var wire 1 j$ i4 [12] $end
$var wire 1 k$ i4 [11] $end
$var wire 1 l$ i4 [10] $end
$var wire 1 m$ i4 [9] $end
$var wire 1 n$ i4 [8] $end
$var wire 1 o$ i4 [7] $end
$var wire 1 p$ i4 [6] $end
$var wire 1 q$ i4 [5] $end
$var wire 1 r$ i4 [4] $end
$var wire 1 s$ i4 [3] $end
$var wire 1 t$ i4 [2] $end
$var wire 1 u$ i4 [1] $end
$var wire 1 v$ i4 [0] $end
$var wire 1 w$ i5 [31] $end
$var wire 1 x$ i5 [30] $end
$var wire 1 y$ i5 [29] $end
$var wire 1 z$ i5 [28] $end
$var wire 1 {$ i5 [27] $end
$var wire 1 |$ i5 [26] $end
$var wire 1 }$ i5 [25] $end
$var wire 1 ~$ i5 [24] $end
$var wire 1 !% i5 [23] $end
$var wire 1 "% i5 [22] $end
$var wire 1 #% i5 [21] $end
$var wire 1 $% i5 [20] $end
$var wire 1 %% i5 [19] $end
$var wire 1 &% i5 [18] $end
$var wire 1 '% i5 [17] $end
$var wire 1 (% i5 [16] $end
$var wire 1 )% i5 [15] $end
$var wire 1 *% i5 [14] $end
$var wire 1 +% i5 [13] $end
$var wire 1 ,% i5 [12] $end
$var wire 1 -% i5 [11] $end
$var wire 1 .% i5 [10] $end
$var wire 1 /% i5 [9] $end
$var wire 1 0% i5 [8] $end
$var wire 1 1% i5 [7] $end
$var wire 1 2% i5 [6] $end
$var wire 1 3% i5 [5] $end
$var wire 1 4% i5 [4] $end
$var wire 1 5% i5 [3] $end
$var wire 1 6% i5 [2] $end
$var wire 1 7% i5 [1] $end
$var wire 1 8% i5 [0] $end
$var wire 1 9% i6 [31] $end
$var wire 1 :% i6 [30] $end
$var wire 1 ;% i6 [29] $end
$var wire 1 <% i6 [28] $end
$var wire 1 =% i6 [27] $end
$var wire 1 >% i6 [26] $end
$var wire 1 ?% i6 [25] $end
$var wire 1 @% i6 [24] $end
$var wire 1 A% i6 [23] $end
$var wire 1 B% i6 [22] $end
$var wire 1 C% i6 [21] $end
$var wire 1 D% i6 [20] $end
$var wire 1 E% i6 [19] $end
$var wire 1 F% i6 [18] $end
$var wire 1 G% i6 [17] $end
$var wire 1 H% i6 [16] $end
$var wire 1 I% i6 [15] $end
$var wire 1 J% i6 [14] $end
$var wire 1 K% i6 [13] $end
$var wire 1 L% i6 [12] $end
$var wire 1 M% i6 [11] $end
$var wire 1 N% i6 [10] $end
$var wire 1 O% i6 [9] $end
$var wire 1 P% i6 [8] $end
$var wire 1 Q% i6 [7] $end
$var wire 1 R% i6 [6] $end
$var wire 1 S% i6 [5] $end
$var wire 1 T% i6 [4] $end
$var wire 1 U% i6 [3] $end
$var wire 1 V% i6 [2] $end
$var wire 1 W% i6 [1] $end
$var wire 1 X% i6 [0] $end
$var wire 1 Y% i7 [31] $end
$var wire 1 Z% i7 [30] $end
$var wire 1 [% i7 [29] $end
$var wire 1 \% i7 [28] $end
$var wire 1 ]% i7 [27] $end
$var wire 1 ^% i7 [26] $end
$var wire 1 _% i7 [25] $end
$var wire 1 `% i7 [24] $end
$var wire 1 a% i7 [23] $end
$var wire 1 b% i7 [22] $end
$var wire 1 c% i7 [21] $end
$var wire 1 d% i7 [20] $end
$var wire 1 e% i7 [19] $end
$var wire 1 f% i7 [18] $end
$var wire 1 g% i7 [17] $end
$var wire 1 h% i7 [16] $end
$var wire 1 i% i7 [15] $end
$var wire 1 j% i7 [14] $end
$var wire 1 k% i7 [13] $end
$var wire 1 l% i7 [12] $end
$var wire 1 m% i7 [11] $end
$var wire 1 n% i7 [10] $end
$var wire 1 o% i7 [9] $end
$var wire 1 p% i7 [8] $end
$var wire 1 q% i7 [7] $end
$var wire 1 r% i7 [6] $end
$var wire 1 s% i7 [5] $end
$var wire 1 t% i7 [4] $end
$var wire 1 u% i7 [3] $end
$var wire 1 v% i7 [2] $end
$var wire 1 w% i7 [1] $end
$var wire 1 x% i7 [0] $end
$var wire 1 y% i8 [31] $end
$var wire 1 z% i8 [30] $end
$var wire 1 {% i8 [29] $end
$var wire 1 |% i8 [28] $end
$var wire 1 }% i8 [27] $end
$var wire 1 ~% i8 [26] $end
$var wire 1 !& i8 [25] $end
$var wire 1 "& i8 [24] $end
$var wire 1 #& i8 [23] $end
$var wire 1 $& i8 [22] $end
$var wire 1 %& i8 [21] $end
$var wire 1 && i8 [20] $end
$var wire 1 '& i8 [19] $end
$var wire 1 (& i8 [18] $end
$var wire 1 )& i8 [17] $end
$var wire 1 *& i8 [16] $end
$var wire 1 +& i8 [15] $end
$var wire 1 ,& i8 [14] $end
$var wire 1 -& i8 [13] $end
$var wire 1 .& i8 [12] $end
$var wire 1 /& i8 [11] $end
$var wire 1 0& i8 [10] $end
$var wire 1 1& i8 [9] $end
$var wire 1 2& i8 [8] $end
$var wire 1 3& i8 [7] $end
$var wire 1 4& i8 [6] $end
$var wire 1 5& i8 [5] $end
$var wire 1 6& i8 [4] $end
$var wire 1 7& i8 [3] $end
$var wire 1 8& i8 [2] $end
$var wire 1 9& i8 [1] $end
$var wire 1 :& i8 [0] $end
$var wire 1 ;& i9 [31] $end
$var wire 1 <& i9 [30] $end
$var wire 1 =& i9 [29] $end
$var wire 1 >& i9 [28] $end
$var wire 1 ?& i9 [27] $end
$var wire 1 @& i9 [26] $end
$var wire 1 A& i9 [25] $end
$var wire 1 B& i9 [24] $end
$var wire 1 C& i9 [23] $end
$var wire 1 D& i9 [22] $end
$var wire 1 E& i9 [21] $end
$var wire 1 F& i9 [20] $end
$var wire 1 G& i9 [19] $end
$var wire 1 H& i9 [18] $end
$var wire 1 I& i9 [17] $end
$var wire 1 J& i9 [16] $end
$var wire 1 K& i9 [15] $end
$var wire 1 L& i9 [14] $end
$var wire 1 M& i9 [13] $end
$var wire 1 N& i9 [12] $end
$var wire 1 O& i9 [11] $end
$var wire 1 P& i9 [10] $end
$var wire 1 Q& i9 [9] $end
$var wire 1 R& i9 [8] $end
$var wire 1 S& i9 [7] $end
$var wire 1 T& i9 [6] $end
$var wire 1 U& i9 [5] $end
$var wire 1 V& i9 [4] $end
$var wire 1 W& i9 [3] $end
$var wire 1 X& i9 [2] $end
$var wire 1 Y& i9 [1] $end
$var wire 1 Z& i9 [0] $end
$var wire 1 [& i10 [31] $end
$var wire 1 \& i10 [30] $end
$var wire 1 ]& i10 [29] $end
$var wire 1 ^& i10 [28] $end
$var wire 1 _& i10 [27] $end
$var wire 1 `& i10 [26] $end
$var wire 1 a& i10 [25] $end
$var wire 1 b& i10 [24] $end
$var wire 1 c& i10 [23] $end
$var wire 1 d& i10 [22] $end
$var wire 1 e& i10 [21] $end
$var wire 1 f& i10 [20] $end
$var wire 1 g& i10 [19] $end
$var wire 1 h& i10 [18] $end
$var wire 1 i& i10 [17] $end
$var wire 1 j& i10 [16] $end
$var wire 1 k& i10 [15] $end
$var wire 1 l& i10 [14] $end
$var wire 1 m& i10 [13] $end
$var wire 1 n& i10 [12] $end
$var wire 1 o& i10 [11] $end
$var wire 1 p& i10 [10] $end
$var wire 1 q& i10 [9] $end
$var wire 1 r& i10 [8] $end
$var wire 1 s& i10 [7] $end
$var wire 1 t& i10 [6] $end
$var wire 1 u& i10 [5] $end
$var wire 1 v& i10 [4] $end
$var wire 1 w& i10 [3] $end
$var wire 1 x& i10 [2] $end
$var wire 1 y& i10 [1] $end
$var wire 1 z& i10 [0] $end
$var wire 1 $# i11 [31] $end
$var wire 1 %# i11 [30] $end
$var wire 1 &# i11 [29] $end
$var wire 1 '# i11 [28] $end
$var wire 1 (# i11 [27] $end
$var wire 1 )# i11 [26] $end
$var wire 1 *# i11 [25] $end
$var wire 1 +# i11 [24] $end
$var wire 1 ,# i11 [23] $end
$var wire 1 -# i11 [22] $end
$var wire 1 .# i11 [21] $end
$var wire 1 /# i11 [20] $end
$var wire 1 0# i11 [19] $end
$var wire 1 1# i11 [18] $end
$var wire 1 2# i11 [17] $end
$var wire 1 3# i11 [16] $end
$var wire 1 4# i11 [15] $end
$var wire 1 5# i11 [14] $end
$var wire 1 6# i11 [13] $end
$var wire 1 7# i11 [12] $end
$var wire 1 8# i11 [11] $end
$var wire 1 9# i11 [10] $end
$var wire 1 :# i11 [9] $end
$var wire 1 ;# i11 [8] $end
$var wire 1 <# i11 [7] $end
$var wire 1 =# i11 [6] $end
$var wire 1 ># i11 [5] $end
$var wire 1 ?# i11 [4] $end
$var wire 1 @# i11 [3] $end
$var wire 1 A# i11 [2] $end
$var wire 1 B# i11 [1] $end
$var wire 1 C# i11 [0] $end
$var wire 1 P! s [3] $end
$var wire 1 Q! s [2] $end
$var wire 1 R! s [1] $end
$var wire 1 S! s [0] $end
$var reg 32 {& y [31:0] $end
$upscope $end
$upscope $end

$scope module Instrmem_instance $end
$var wire 1 |& addr_i [31] $end
$var wire 1 }& addr_i [30] $end
$var wire 1 ~& addr_i [29] $end
$var wire 1 !' addr_i [28] $end
$var wire 1 "' addr_i [27] $end
$var wire 1 #' addr_i [26] $end
$var wire 1 $' addr_i [25] $end
$var wire 1 %' addr_i [24] $end
$var wire 1 &' addr_i [23] $end
$var wire 1 '' addr_i [22] $end
$var wire 1 (' addr_i [21] $end
$var wire 1 )' addr_i [20] $end
$var wire 1 *' addr_i [19] $end
$var wire 1 +' addr_i [18] $end
$var wire 1 ,' addr_i [17] $end
$var wire 1 -' addr_i [16] $end
$var wire 1 .' addr_i [15] $end
$var wire 1 /' addr_i [14] $end
$var wire 1 0' addr_i [13] $end
$var wire 1 1' addr_i [12] $end
$var wire 1 2' addr_i [11] $end
$var wire 1 3' addr_i [10] $end
$var wire 1 4' addr_i [9] $end
$var wire 1 5' addr_i [8] $end
$var wire 1 6' addr_i [7] $end
$var wire 1 7' addr_i [6] $end
$var wire 1 8' addr_i [5] $end
$var wire 1 9' addr_i [4] $end
$var wire 1 :' addr_i [3] $end
$var wire 1 ;' addr_i [2] $end
$var wire 1 <' addr_i [1] $end
$var wire 1 =' addr_i [0] $end
$var reg 32 >' instruction_o [31:0] $end
$upscope $end

$scope module data_mem_instance $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 E! mem_wr $end
$var wire 1 ?' addr [31] $end
$var wire 1 @' addr [30] $end
$var wire 1 A' addr [29] $end
$var wire 1 B' addr [28] $end
$var wire 1 C' addr [27] $end
$var wire 1 D' addr [26] $end
$var wire 1 E' addr [25] $end
$var wire 1 F' addr [24] $end
$var wire 1 G' addr [23] $end
$var wire 1 H' addr [22] $end
$var wire 1 I' addr [21] $end
$var wire 1 J' addr [20] $end
$var wire 1 K' addr [19] $end
$var wire 1 L' addr [18] $end
$var wire 1 M' addr [17] $end
$var wire 1 N' addr [16] $end
$var wire 1 O' addr [15] $end
$var wire 1 P' addr [14] $end
$var wire 1 Q' addr [13] $end
$var wire 1 R' addr [12] $end
$var wire 1 S' addr [11] $end
$var wire 1 T' addr [10] $end
$var wire 1 U' addr [9] $end
$var wire 1 V' addr [8] $end
$var wire 1 W' addr [7] $end
$var wire 1 X' addr [6] $end
$var wire 1 Y' addr [5] $end
$var wire 1 Z' addr [4] $end
$var wire 1 [' addr [3] $end
$var wire 1 \' addr [2] $end
$var wire 1 ]' addr [1] $end
$var wire 1 ^' addr [0] $end
$var wire 1 T! data_wr [31] $end
$var wire 1 U! data_wr [30] $end
$var wire 1 V! data_wr [29] $end
$var wire 1 W! data_wr [28] $end
$var wire 1 X! data_wr [27] $end
$var wire 1 Y! data_wr [26] $end
$var wire 1 Z! data_wr [25] $end
$var wire 1 [! data_wr [24] $end
$var wire 1 \! data_wr [23] $end
$var wire 1 ]! data_wr [22] $end
$var wire 1 ^! data_wr [21] $end
$var wire 1 _! data_wr [20] $end
$var wire 1 `! data_wr [19] $end
$var wire 1 a! data_wr [18] $end
$var wire 1 b! data_wr [17] $end
$var wire 1 c! data_wr [16] $end
$var wire 1 d! data_wr [15] $end
$var wire 1 e! data_wr [14] $end
$var wire 1 f! data_wr [13] $end
$var wire 1 g! data_wr [12] $end
$var wire 1 h! data_wr [11] $end
$var wire 1 i! data_wr [10] $end
$var wire 1 j! data_wr [9] $end
$var wire 1 k! data_wr [8] $end
$var wire 1 l! data_wr [7] $end
$var wire 1 m! data_wr [6] $end
$var wire 1 n! data_wr [5] $end
$var wire 1 o! data_wr [4] $end
$var wire 1 p! data_wr [3] $end
$var wire 1 q! data_wr [2] $end
$var wire 1 r! data_wr [1] $end
$var wire 1 s! data_wr [0] $end
$var wire 1 I! mask [3] $end
$var wire 1 J! mask [2] $end
$var wire 1 K! mask [1] $end
$var wire 1 L! mask [0] $end
$var wire 1 M! load_ctrl [2] $end
$var wire 1 N! load_ctrl [1] $end
$var wire 1 O! load_ctrl [0] $end
$var reg 32 _' mem_data [31:0] $end
$var reg 32 `' mem_data_read [31:0] $end
$var reg 32 a' debug [31:0] $end
$upscope $end

$scope module Branch_block_instance $end
$var wire 1 b' op_a [31] $end
$var wire 1 c' op_a [30] $end
$var wire 1 d' op_a [29] $end
$var wire 1 e' op_a [28] $end
$var wire 1 f' op_a [27] $end
$var wire 1 g' op_a [26] $end
$var wire 1 h' op_a [25] $end
$var wire 1 i' op_a [24] $end
$var wire 1 j' op_a [23] $end
$var wire 1 k' op_a [22] $end
$var wire 1 l' op_a [21] $end
$var wire 1 m' op_a [20] $end
$var wire 1 n' op_a [19] $end
$var wire 1 o' op_a [18] $end
$var wire 1 p' op_a [17] $end
$var wire 1 q' op_a [16] $end
$var wire 1 r' op_a [15] $end
$var wire 1 s' op_a [14] $end
$var wire 1 t' op_a [13] $end
$var wire 1 u' op_a [12] $end
$var wire 1 v' op_a [11] $end
$var wire 1 w' op_a [10] $end
$var wire 1 x' op_a [9] $end
$var wire 1 y' op_a [8] $end
$var wire 1 z' op_a [7] $end
$var wire 1 {' op_a [6] $end
$var wire 1 |' op_a [5] $end
$var wire 1 }' op_a [4] $end
$var wire 1 ~' op_a [3] $end
$var wire 1 !( op_a [2] $end
$var wire 1 "( op_a [1] $end
$var wire 1 #( op_a [0] $end
$var wire 1 $( op_b [31] $end
$var wire 1 %( op_b [30] $end
$var wire 1 &( op_b [29] $end
$var wire 1 '( op_b [28] $end
$var wire 1 (( op_b [27] $end
$var wire 1 )( op_b [26] $end
$var wire 1 *( op_b [25] $end
$var wire 1 +( op_b [24] $end
$var wire 1 ,( op_b [23] $end
$var wire 1 -( op_b [22] $end
$var wire 1 .( op_b [21] $end
$var wire 1 /( op_b [20] $end
$var wire 1 0( op_b [19] $end
$var wire 1 1( op_b [18] $end
$var wire 1 2( op_b [17] $end
$var wire 1 3( op_b [16] $end
$var wire 1 4( op_b [15] $end
$var wire 1 5( op_b [14] $end
$var wire 1 6( op_b [13] $end
$var wire 1 7( op_b [12] $end
$var wire 1 8( op_b [11] $end
$var wire 1 9( op_b [10] $end
$var wire 1 :( op_b [9] $end
$var wire 1 ;( op_b [8] $end
$var wire 1 <( op_b [7] $end
$var wire 1 =( op_b [6] $end
$var wire 1 >( op_b [5] $end
$var wire 1 ?( op_b [4] $end
$var wire 1 @( op_b [3] $end
$var wire 1 A( op_b [2] $end
$var wire 1 B( op_b [1] $end
$var wire 1 C( op_b [0] $end
$var wire 1 D( func3 [2] $end
$var wire 1 E( func3 [1] $end
$var wire 1 F( func3 [0] $end
$var reg 1 G( branch_taken $end
$var reg 32 H( branch_sub [31:0] $end
$var reg 1 I( overflow $end
$var reg 1 J( not_zero $end
$var reg 1 K( neg $end
$var reg 1 L( carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope begin std $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1"
0#
bx &
bx '
bx (
x)
x*
x+
x,
x-
x.
b100 /
bx 0
bx 1
bx 2
bx 3
bx `
bx a
b100 b
bx c
xd
xe
xf
xg
xh
bx i
bx ,!
x-!
bx .!
bx 7!
b100 8!
bx 9!
bx t!
bx u!
xv!
bx w!
bx x!
bx y!
bx z!
bx {!
bx |!
bx }!
bx ~!
bx !"
bx ""
bx #"
bx $"
x%"
bx &"
bx '"
bx ("
bx )"
bx *"
bx +"
bx \"
bx ]"
b11 ^"
x_"
x`"
xa"
bx D#
bx E#
bx F#
bx G#
bx H#
b0x I#
b0x J#
bx K#
bx L#
bx M#
bx N#
bx O#
xP#
xQ#
xR#
xS#
xT#
bx {&
bx >'
bx _'
bx `'
bx a'
xG(
bx H(
xI(
xJ(
xK(
0L(
b10 !
b1100 4
b100 5
b0 6
b1000 7
b11000 8
b11011 9
b11001 :
b1101 ;
b101 <
b0 /!
b1 0!
b10 1!
b100 2!
b101 3!
b100 :!
b0 ;!
b11000 <!
b1000 =!
b11011 >!
b11001 ?!
b1101 @!
b101 A!
xS!
xR!
xQ!
xP!
xC!
xD!
xH!
xG!
1%
0$
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
0O!
0N!
1M!
xL!
xK!
xJ!
xI!
xF!
xE!
xB!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x6!
x5!
x4!
xF(
xE(
xD(
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
0,"
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
$end
#1
1#
1$
0"
0%
b0 }!
b0 a'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
b101000110110111 >'
b101000110110111 t!
b101000110110111 &
b0 !"
b0 ""
b11 #"
b101 &"
1;"
1:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0_"
b0 \"
0`"
b0 ]"
b0 w!
b0 |!
b0 +"
b0 (
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
b0 H(
0I(
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
b0 E#
0J(
0K(
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
1F(
0E(
1D(
1\
1[
1Z
0Y
1X
1W
0V
1U
1T
0S
0R
0Q
1P
0O
1N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
b101 .!
b110111 ,!
0-!
16!
05!
14!
0d
1f
b1 i
1g
b1010 a
0h
b0 7!
1G(
b101000000000000 )"
b0x0x000000000000 *"
1v!
b0 `
0+
b1010 2
1)
b1 0
1,
0.
b0 '
1-
0F!
1B!
1D!
0E!
b101000000000000 *"
1a"
b100 ~!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
1H!
0G!
0S!
1R!
0Q!
1P!
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
17#
06#
15#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
1_
b11111111111111111010111111111111 K#
b101000000000000 F#
b101000000000000 G#
b0 N#
b0 M#
b0 L#
b101000000000000 O#
b101000000000000 H#
0P#
0T#
0Q#
0R#
0S#
b1 J#
b0 I#
0v$
1X%
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
1*$
0)$
1($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
1h#
0g#
1f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
1,%
0+%
1*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
1N&
0M&
1L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
b101000000000000 {&
b101000000000000 D#
b101000000000000 '"
b0 u!
b0 1
0^
0]
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
1R'
0Q'
1P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
b0 `'
b0 _'
b101000000000000 y!
b0 ("
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
1O"
0N"
1M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
#2
0#
0$
#3
1#
1$
b100 }!
b1000 ~!
b0x00 +"
1;'
b1101000001000011000000110010011 >'
x!#
bx H#
xP#
b101000000000x00 F#
b101000000000x00 G#
b1101000001000011000000110010011 t!
b1101000001000011000000110010011 &
b11 !"
b10 ""
b0 &"
xT#
xQ#
xR#
xS#
b0x I#
b0x J#
15"
11"
10"
1_"
b101000000000000 \"
1`"
b10110 ]"
b10110 w!
b101000000000000 |!
b0x0x000000000x00 +"
b10110 (
1u'
1s'
1B(
1A(
1?(
b100111111101010 H(
1I(
xu"
xs"
b0x0x000000000000 E#
b0x0x000000000x00 G#
1J(
xn&
xl&
1*!
1)!
1'!
xX%
xv$
0F(
0D(
0Z
0W
0P
0N
1M
1L
1G
1A
1?
1>
x6%
x,%
x*%
xX&
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
b0 .!
b10011 ,!
1-!
06!
04!
b0 a
1e
b1 9!
b10110 7!
b0 8!
0G(
b11010000010 )"
b11010000010 *"
0v!
b0 b
b10110 `
b1 c
1*
b0 2
b1 3
b10110 '
b0 /
0-
1C!
b101000000000000 +"
1r!
1q!
1o!
1L!
0K!
0J!
0I!
0!#
1u"
1s"
b1010000000000000 H#
0P#
b101000000000000 E#
b101000000000000 F#
b0 G#
0T#
0Q#
0R#
0S#
b1 J#
b0 I#
0_
0v$
1X%
06%
0,%
0*%
0X&
1n&
1l&
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
1)$
0($
1'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
1g#
0f#
1e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0M!
0R!
0P!
1B#
1<#
1:#
19#
07#
05#
b11111111111111111111100101111101 K#
b11010000010 O#
b0 E#
b101011010000010 F#
b101011010000010 G#
b101011010000010 H#
15$
1/$
1-$
1,$
1*$
0)$
1($
0'$
1s#
1m#
1k#
1j#
1h#
0g#
1f#
0e#
17%
11%
1/%
1.%
1,%
1*%
1Y&
1S&
1Q&
1P&
0n&
0l&
b101011010000010 {&
b101011010000010 D#
b101011010000010 '"
b10 u!
b10 1
1]
1]'
1W'
1U'
1T'
b100 9!
b101100000000000000000 7!
b101011010000010 y!
b101100000000000000000 `
b100 c
1Z"
1T"
1R"
1Q"
b100 3
b101100000000000000000 '
0r!
0q!
0o!
1b!
1a!
1_!
0L!
1J!
#4
0#
0$
b101011010000010 \"
b101011010000010 |!
b101011010000010 +"
1"(
1z'
1x'
1w'
b101011001101100 H(
1"#
1z"
1x"
1w"
b101110100000100 H#
b11010000010 E#
b101000000000000 G#
07%
01%
0/%
0.%
1y&
1s&
1q&
1p&
05$
14$
0/$
1.$
0-$
1+$
0s#
1r#
0m#
1l#
0k#
1i#
b101110100000100 {&
b101110100000100 D#
b101110100000100 '"
b0 u!
b0 1
0]
0]'
1\'
0W'
1V'
0U'
1S'
b1 9!
b10110 7!
b101110100000100 y!
b10110 `
b1 c
0Z"
1Y"
0T"
1S"
0R"
1P"
b1 3
b10110 '
1r!
1q!
1o!
0b!
0a!
0_!
1L!
0J!
#5
1#
1$
b1000 }!
b1100 ~!
0;'
1:'
b1100000001000110100011 >'
b1100000001000110100011 t!
b1100000001000110100011 &
b0 !"
b11 ""
b1 &"
16"
01"
00"
0_"
b0 \"
b101011010000010 ]"
b101011010000010 w!
b0 |!
b0 +"
b101011010000010 (
0"(
0z'
0x'
0w'
0u'
0s'
0A(
0?(
1<(
1:(
19(
17(
15(
b11111111111111111010100101111110 H(
0"#
0z"
0x"
0w"
0u"
0s"
b11010000010 H#
b0 E#
b11010000010 F#
b11010000010 G#
1K(
17%
11%
1/%
1.%
0,%
0*%
0N&
0L&
0y&
0s&
0q&
0p&
15$
04$
1/$
0.$
1-$
0+$
0*$
0($
1s#
0r#
1m#
0l#
1k#
0i#
0h#
0f#
0)!
0'!
1$!
1"!
1!!
1}
1{
1F(
0X
1W
1P
0M
0L
1H
0A
0?
0>
b1 .!
b100011 ,!
0-!
16!
1d
bx i
0g
b11 9!
b101011010000010 7!
b1 8!
b11010000010 {&
1G(
b11 )"
b11 *"
1v!
b11010000010 D#
b1 b
b101011010000010 `
b11 c
0)
bx 0
1.
b11 3
b101011010000010 '
b1 /
b11010000010 '"
1-
0B!
1E!
0a"
b10 u!
0q!
0o!
1l!
1j!
1i!
1g!
1e!
1K!
b10 1
1_
1]
1]'
0\'
1W'
0V'
1U'
0S'
0R'
0P'
1O!
xH!
xG!
1C#
0<#
0:#
09#
b11111111111111111111111111111100 K#
b11 O#
b11 F#
b11 G#
b11 H#
16$
0/$
0-$
0,$
1t#
0m#
0k#
0j#
18%
01%
0/%
0.%
1Z&
0S&
0Q&
0P&
b11 {&
b1100 9!
b1010110100000100000000000000000 7!
bx y!
b1010110100000100000000000000000 `
b1100 c
b11 D#
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
b11 '"
b1100 3
b1010110100000100000000000000000 '
b11 u!
0r!
0l!
0j!
0i!
0g!
0e!
1b!
1\!
1Z!
1Y!
1W!
1U!
0L!
0K!
1J!
1I!
b11 1
1^
1^'
0W'
0U'
0T'
#6
0#
0$
#7
1#
1$
b1010110100000100000000000000000 a'
b1100 }!
b10000 ~!
1;'
b1100000010000110000011 >'
b1100000010000110000011 t!
b1100000010000110000011 &
b10 &"
0F(
1E(
0W
0P
1O
b10 .!
b11 ,!
06!
15!
b1111 9!
b101011010000010 7!
b10 8!
0d
b10 i
1g
xG(
xv!
1)
b10 0
0.
b10 b
b101011010000010 `
b1111 c
b1111 3
b101011010000010 '
b10 /
x-
1B!
0E!
b1010110100000100000000000000000 `'
1a"
1r!
1l!
1j!
1i!
1g!
1e!
0b!
0\!
0Z!
0Y!
0W!
0U!
1L!
1K!
0O!
1N!
0H!
1G!
x_
b0 y!
b1010110100000100000000000000000 _'
b1010110100000100000000000000000 ("
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
b1010110100000100000000000000000 y!
1J"
1D"
1B"
1A"
1?"
1="
#8
0#
0$
b1010110100000100000000000000000 ]"
b1010110100000100000000000000000 w!
b1010110100000100000000000000000 (
0B(
0<(
0:(
09(
07(
05(
12(
1,(
1*(
1)(
1'(
1%(
b10101001011111100000000000000000 H(
0*!
0$!
0"!
0!!
0}
0{
1x
1r
1p
1o
1m
1k
b1010110100000100000000000000000 7!
b1010110100000100000000000000000 `
b1010110100000100000000000000000 '
0r!
0l!
0j!
0i!
0g!
0e!
1b!
1\!
1Z!
1Y!
1W!
1U!
#9
1#
1$
b10000 }!
b10100 ~!
0;'
0:'
19'
bx >'
bx t!
bx &
bx !"
bx ""
bx #"
bx &"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x_"
bx \"
x`"
bx ]"
xa"
bx w!
bx |!
bx +"
bx (
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
bx H(
xI(
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
bx H#
xP#
b0xx E#
bx11 F#
bx G#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx N#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx M#
bx000 L#
xR#
xJ(
xK(
xT#
xQ#
xS#
b0x I#
b0x J#
xX%
xv$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
xz&
xy&
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xF(
xE(
xD(
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
bx .!
bx ,!
x-!
x6!
x5!
x4!
xd
xf
bx i
xg
bx 9!
bx 7!
b100 8!
bx {&
bx )"
bx *"
bx D#
b100 b
bx `
bx c
x)
bx 0
x,
x.
bx 3
bx '
b100 /
bx '"
xB!
xD!
xE!
b0x0x0xx0x00000x00000000000000000 `'
bx u!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xL!
xK!
xJ!
xI!
bx 1
x^
x]
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
0N!
1M!
xH!
xG!
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
bx K#
bx O#
bx E#
bx F#
bx N#
bx M#
bx L#
bx `'
xV$
xU$
xT$
x[%
xZ%
xY%
x{%
xz%
xy%
xZ&
xY&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
bx _'
bx y!
bx ("
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
#10
0#
0$
#11
1#
1$
